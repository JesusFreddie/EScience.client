openapi: 3.0.1
info:
  title: EScience.Application
  version: '1.0'
paths:
  /account/session:
    get:
      tags:
        - Account
      operationId: AccountSession
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProfileDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ProfileDto'
  '/account/{accountName}':
    get:
      tags:
        - Account
      operationId: AccountGetProfile
      parameters:
        - name: accountName
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProfileDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ProfileDto'
  '/account/{accountName}/article/{articleName}':
    get:
      tags:
        - AccountArticle
      operationId: AccountArticleGet
      parameters:
        - name: accountName
          in: path
          required: true
          schema:
            type: string
        - name: articleName
          in: path
          required: true
          schema:
            type: string
        - name: branchName
          in: query
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Article'
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
            text/json:
              schema:
                $ref: '#/components/schemas/Article'
  /articles/create:
    post:
      tags:
        - Article
      operationId: ArticleCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateArticleRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateArticleRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateArticleRequest'
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Article'
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
            text/json:
              schema:
                $ref: '#/components/schemas/Article'
  '/articles/{articleId}/update':
    patch:
      tags:
        - Article
      operationId: ArticleUpdate
      parameters:
        - name: articleId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateArticleRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateArticleRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateArticleRequest'
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Article'
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
            text/json:
              schema:
                $ref: '#/components/schemas/Article'
  /articles:
    get:
      tags:
        - Article
      operationId: ArticleGetAll
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Article'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Article'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Article'
  '/articles/{articleId}':
    get:
      tags:
        - Article
      operationId: ArticleGet
      parameters:
        - name: articleId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Article'
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
            text/json:
              schema:
                $ref: '#/components/schemas/Article'
  '/articles/set_participant_for_article/{articleId}':
    post:
      tags:
        - Article
      operationId: ArticleSetParticipant
      parameters:
        - name: articleId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetParticipantRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/SetParticipantRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SetParticipantRequest'
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ArticleParticipant'
            application/json:
              schema:
                $ref: '#/components/schemas/ArticleParticipant'
            text/json:
              schema:
                $ref: '#/components/schemas/ArticleParticipant'
  '/branch/{articleId}/create':
    post:
      tags:
        - ArticleBranch
      operationId: BranchCreate
      parameters:
        - name: articleId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBranchDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateBranchDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateBranchDto'
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ArticleBranchDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ArticleBranchDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ArticleBranchDto'
  '/branch/{articleId}/{branchName}':
    get:
      tags:
        - ArticleBranch
      operationId: BranchGet
      parameters:
        - name: articleId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: branchName
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ArticleBranch'
            application/json:
              schema:
                $ref: '#/components/schemas/ArticleBranch'
            text/json:
              schema:
                $ref: '#/components/schemas/ArticleBranch'
  '/branch/{articleId}':
    get:
      tags:
        - ArticleBranch
      operationId: BranchGetAll
      parameters:
        - name: articleId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ArticleBranch'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ArticleBranch'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ArticleBranch'
  '/branch/{articleId}/id/{branchId}':
    get:
      tags:
        - ArticleBranch
      operationId: BranchGetById
      parameters:
        - name: branchId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: articleId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ArticleBranch'
            application/json:
              schema:
                $ref: '#/components/schemas/ArticleBranch'
            text/json:
              schema:
                $ref: '#/components/schemas/ArticleBranch'
  '/participant/{articleId}':
    get:
      tags:
        - ArticleParticipant
      operationId: ParticipantGetAllByArticle
      parameters:
        - name: articleId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ArticleParticipant'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ArticleParticipant'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ArticleParticipant'
  '/participant/{articleId}/invite':
    post:
      tags:
        - ArticleParticipant
      operationId: ParticipantInvite
      parameters:
        - name: articleId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParticipantInviteRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ParticipantInviteRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ParticipantInviteRequest'
      responses:
        '200':
          description: OK
  '/{articleId}/version/{branchId}/last':
    get:
      tags:
        - ArticleVersion
      operationId: VersionGetLast
      parameters:
        - name: branchId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: articleId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ArticleVersion'
            application/json:
              schema:
                $ref: '#/components/schemas/ArticleVersion'
            text/json:
              schema:
                $ref: '#/components/schemas/ArticleVersion'
  '/{articleId}/version/{branchId}/save':
    post:
      tags:
        - ArticleVersion
      operationId: VersionSave
      parameters:
        - name: articleId
          in: path
          required: true
          schema:
            type: string
        - name: branchId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveArticleTextRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/SaveArticleTextRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SaveArticleTextRequest'
      responses:
        '200':
          description: OK
  /auth/register:
    post:
      tags:
        - Auth
      operationId: AuthRegister
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequestDto'
          text/json:
            schema:
              $ref: '#/components/schemas/RegisterRequestDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RegisterRequestDto'
      responses:
        '200':
          description: OK
  /auth/login:
    post:
      tags:
        - Auth
      operationId: AuthLogin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequestDto'
          text/json:
            schema:
              $ref: '#/components/schemas/LoginRequestDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/LoginRequestDto'
      responses:
        '200':
          description: OK
  /auth/logout:
    post:
      tags:
        - Auth
      operationId: AuthLogout
      responses:
        '200':
          description: OK
  '/merge/{articleId}/version/{branchId}':
    post:
      tags:
        - Merge
      operationId: Merge
      parameters:
        - name: articleId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: branchId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MergeRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/MergeRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MergeRequest'
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
components:
  schemas:
    Account:
      type: object
      properties:
        id:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        name:
          type: string
          nullable: true
        roleId:
          type: integer
          format: int32
        role:
          $ref: '#/components/schemas/Role'
        userId:
          type: string
          format: uuid
        user:
          $ref: '#/components/schemas/User'
        articleParticipants:
          type: array
          items:
            $ref: '#/components/schemas/ArticleParticipant'
          nullable: true
      additionalProperties: false
    Article:
      type: object
      properties:
        id:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        isPrivate:
          type: boolean
        accountId:
          type: string
          format: uuid
        account:
          $ref: '#/components/schemas/Account'
        articleParticipants:
          type: array
          items:
            $ref: '#/components/schemas/ArticleParticipant'
          nullable: true
        articleBranches:
          type: array
          items:
            $ref: '#/components/schemas/ArticleBranch'
          nullable: true
        typeArticleId:
          type: string
          format: uuid
          nullable: true
        articleType:
          $ref: '#/components/schemas/ArticleType'
      additionalProperties: false
    ArticleBranch:
      type: object
      properties:
        id:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        name:
          type: string
          nullable: true
        articleId:
          type: string
          format: uuid
        article:
          $ref: '#/components/schemas/Article'
        creatorId:
          type: string
          format: uuid
        creator:
          $ref: '#/components/schemas/ArticleParticipant'
        articleBranchVersions:
          type: array
          items:
            $ref: '#/components/schemas/ArticleVersion'
          nullable: true
        parentBranch:
          $ref: '#/components/schemas/ArticleBranch'
        parent_id:
          type: string
          format: uuid
          nullable: true
        is_main:
          type: boolean
      additionalProperties: false
    ArticleBranchDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        articleId:
          type: string
          format: uuid
        creatorId:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      additionalProperties: false
    ArticleParticipant:
      type: object
      properties:
        id:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        accountId:
          type: string
          format: uuid
        account:
          $ref: '#/components/schemas/Account'
        isAccepted:
          type: boolean
        articleId:
          type: string
          format: uuid
        article:
          $ref: '#/components/schemas/Article'
        permissionLevel:
          $ref: '#/components/schemas/ArticlePermissionLevel'
        articleBranches:
          type: array
          items:
            $ref: '#/components/schemas/ArticleBranch'
          nullable: true
        articleBranchVersions:
          type: array
          items:
            $ref: '#/components/schemas/ArticleVersion'
          nullable: true
      additionalProperties: false
    ArticlePermissionLevel:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
      type: integer
      format: int32
    ArticleType:
      type: object
      properties:
        id:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        name:
          type: string
          nullable: true
      additionalProperties: false
    ArticleVersion:
      type: object
      properties:
        id:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        text:
          type: string
          nullable: true
        articleParticipantId:
          type: string
          format: uuid
        creator:
          $ref: '#/components/schemas/ArticleParticipant'
        articleBranchId:
          type: string
          format: uuid
        articleBranch:
          $ref: '#/components/schemas/ArticleBranch'
      additionalProperties: false
    CreateArticleRequest:
      type: object
      properties:
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        isPrivate:
          type: boolean
        articleTypeId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
    CreateBranchDto:
      type: object
      properties:
        parentId:
          type: string
          format: uuid
          nullable: true
        name:
          type: string
          nullable: true
      additionalProperties: false
    LoginRequestDto:
      type: object
      properties:
        email:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
      additionalProperties: false
    MergeRequest:
      type: object
      properties:
        text:
          type: string
          nullable: true
      additionalProperties: false
    ParticipantInviteRequest:
      type: object
      properties:
        email:
          type: string
          nullable: true
        permissionLevel:
          $ref: '#/components/schemas/ArticlePermissionLevel'
      additionalProperties: false
    ProfileDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
      additionalProperties: false
    RegisterRequestDto:
      type: object
      properties:
        email:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
      additionalProperties: false
    Role:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
      additionalProperties: false
    SaveArticleTextRequest:
      type: object
      properties:
        branchId:
          type: string
          format: uuid
        text:
          type: string
          nullable: true
      additionalProperties: false
    SetParticipantRequest:
      type: object
      properties:
        accountId:
          type: string
          format: uuid
        permissionLevel:
          $ref: '#/components/schemas/ArticlePermissionLevel'
      additionalProperties: false
    SuccessResponse:
      type: object
      properties:
        success:
          type: boolean
      additionalProperties: false
    UpdateArticleRequest:
      type: object
      properties:
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        isPrivate:
          type: boolean
          nullable: true
      additionalProperties: false
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        email:
          type: string
          nullable: true
          readOnly: true
        account:
          $ref: '#/components/schemas/Account'
      additionalProperties: false