openapi: 3.0.1
info:
  title: EScience.Application
  version: '1.0'
paths:
  /account/session:
    get:
      tags:
        - Account
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProfileDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ProfileDto'
  '/account/{accountName}':
    get:
      tags:
        - Account
      parameters:
        - name: name
          in: query
          schema:
            type: string
        - name: accountName
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProfileDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ProfileDto'
  '/account/{accountName}/article/{title}':
    get:
      tags:
        - AccountArticle
      parameters:
        - name: accountName
          in: path
          required: true
          schema:
            type: string
        - name: title
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ArticleDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ArticleDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ArticleDto'
  /articles/create:
    post:
      tags:
        - Article
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateArticleRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateArticleRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateArticleRequest'
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ArticleDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ArticleDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ArticleDto'
  '/articles/{articleId}':
    get:
      tags:
        - Article
      parameters:
        - name: articleId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ArticleDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ArticleDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ArticleDto'
  '/articles/set_participant_for_article/{articleId}':
    post:
      tags:
        - Article
      parameters:
        - name: articleId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetParticipantRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/SetParticipantRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SetParticipantRequest'
      responses:
        '200':
          description: OK
  /branch/create:
    post:
      tags:
        - ArticleBranch
      parameters:
        - name: articleTitle
          in: query
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ArticleBranchDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ArticleBranchDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ArticleBranchDto'
  '/branch/{accountName}/{articleTitle}/{branchName}':
    get:
      tags:
        - ArticleBranch
      parameters:
        - name: branchName
          in: path
          required: true
          schema:
            type: string
        - name: accountName
          in: path
          required: true
          schema:
            type: string
        - name: articleTitle
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ArticleBranchDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ArticleBranchDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ArticleBranchDto'
  /auth/register:
    post:
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequestDto'
          text/json:
            schema:
              $ref: '#/components/schemas/RegisterRequestDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RegisterRequestDto'
      responses:
        '200':
          description: OK
  /auth/login:
    post:
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequestDto'
          text/json:
            schema:
              $ref: '#/components/schemas/LoginRequestDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/LoginRequestDto'
      responses:
        '200':
          description: OK
  /auth/logout:
    post:
      tags:
        - Auth
      responses:
        '200':
          description: OK
components:
  schemas:
    ArticleBranchDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        articleId:
          type: string
          format: uuid
        creatorId:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      additionalProperties: false
    ArticleDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        isPrivate:
          type: boolean
        accountId:
          type: string
          format: uuid
        typeArticleId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
    ArticlePermissionLevel:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
      type: integer
      format: int32
    CreateArticleRequest:
      type: object
      properties:
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        articleTypeId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
    LoginRequestDto:
      type: object
      properties:
        email:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
      additionalProperties: false
    ProfileDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
      additionalProperties: false
    RegisterRequestDto:
      type: object
      properties:
        email:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
      additionalProperties: false
    SetParticipantRequest:
      type: object
      properties:
        accountId:
          type: string
          format: uuid
        permissionLevel:
          $ref: '#/components/schemas/ArticlePermissionLevel'
      additionalProperties: false